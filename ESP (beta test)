
local Players = cloneref(game:GetService("Players"))
local RunService = cloneref(game:GetService("RunService"))
local Workspace = cloneref(game:GetService("Workspace"))


local function createTextLabel(tool)
    
    if tool:FindFirstChild("ToolNameLabel") then return end

    
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "ToolNameLabel"
    billboard.Adornee = tool
    billboard.Size = UDim2.new(0, 100, 0, 30)
    billboard.StudsOffset = Vector3.new(0, 2, 0)
    billboard.AlwaysOnTop = true
    billboard.MaxDistance = math.huge

    
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = tool.Name
    textLabel.TextColor3 = Color3.new(1, 1, 1) -- White text
    textLabel.TextScaled = true
    textLabel.Font = Enum.Font.SourceSansBold
    textLabel.Parent = billboard

    
    billboard.Parent = tool
end

local function applyOutline(tool)
    -- Check if it already has a highlight
    if not tool:FindFirstChildOfClass("Highlight") then
        local highlight = Instance.new("Highlight")
        highlight.FillColor = Color3.new(1, 1, 0) -- Yellow glow
        highlight.OutlineColor = Color3.new(1, 0, 0) -- Red outline
        highlight.Parent = tool
    end

    
    createTextLabel(tool)
end

for _, obj in Workspace:GetDescendants() do
    if obj:IsA("Tool") and not (obj.Name == "RedFlag" or obj.Name == "BlueFlag" or obj.Name == "Item") then
        applyOutline(obj)
    end
end


Workspace.DescendantAdded:Connect(function(obj)
    if obj:IsA("Tool") then
        applyOutline(obj)
    end
end)


game:GetService("StarterGui"):SetCore("SendNotification", {Title = "Item Esp"; Text = "Loaded!"; Duration = 5})



local function createOutlineESP(model, outlineColor, fillColor)
    if model and not model:FindFirstChildOfClass("Highlight") then
        local highlight = Instance.new("Highlight")
        highlight.Parent = model
        highlight.Adornee = model
        highlight.FillTransparency = 0.75
        highlight.FillColor = fillColor
        highlight.OutlineColor = outlineColor
        highlight.OutlineTransparency = 0 
    end
end

local function createHealthIndicator(character, textColor)
    local head = character:FindFirstChild("Head")
    if head and not head:FindFirstChild("HealthGui") then
        local healthGui = Instance.new("BillboardGui")
        healthGui.Name = "HealthGui"
        healthGui.Size = UDim2.new(0, 100, 0, 30)
        healthGui.AlwaysOnTop = true
        healthGui.MaxDistance = math.huge
        healthGui.Parent = head

        local healthLabel = Instance.new("TextLabel")
        healthLabel.Size = UDim2.new(1, 0, 1, 0)
        healthLabel.BackgroundTransparency = 1
        healthLabel.TextScaled = true
        healthLabel.Text = ""
        healthLabel.TextColor3 = textColor
        healthLabel.Font = Enum.Font.SourceSansBold
        healthLabel.Parent = healthGui
    end
end

local function updateHealthIndicators()
    for _, player in Players:GetPlayers() do
        local character = player.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            local head = character:FindFirstChild("Head")
            if humanoid and head then
                local textColor = humanoid.MaxHealth > 500 and Color3.new(1, 0, 0) or Color3.new(1, 1, 1) -- Red if max HP > 500
                createHealthIndicator(character, textColor)
                
                local healthGui = head:FindFirstChild("HealthGui")
                if healthGui then
                    local healthLabel = healthGui:FindFirstChildOfClass("TextLabel")
                    if healthLabel then
                        healthLabel.Text = math.floor(humanoid.Health) .. "/" .. humanoid.MaxHealth
                        healthLabel.TextColor3 = textColor
                    end
                end
            end
        end
    end
end

local function createOutlineESPForGroup(group, outlineColor, fillColor)
    if group then
        for _, obj in group:GetChildren() do
            local humanoid = obj:FindFirstChildOfClass("Humanoid")
            local rootPart = obj:FindFirstChild("HumanoidRootPart")
            if humanoid and rootPart then
                createOutlineESP(obj, outlineColor, fillColor)
            end
        end
    end
end

local function highlightGenerators()
    for _, obj in workspace:GetDescendants() do
    if obj:IsA("Model") and obj.Name == "Generator" then
        createOutlineESP(obj, Color3.new(1, 1, 0), Color3.new(1, 1, 0.5)) -- Yellow outline, light yellow fill
    end
end
end

local function highlightMinions()
    for _, obj in workspace:GetDescendants() do
    if obj:IsA("Model") and obj.Name == "1x1x1x1Zombie" then
        createOutlineESP(obj, Color3.fromRGB(0, 255, 0), Color3.fromRGB(0, 190, 0)) -- green outline, not light green fill
    end
end
end

local function highlightDelivery()
    for _, obj in workspace:GetDescendants() do
    if obj:IsA("Model") and obj.Name == "PizzaDeliveryRig" then
        createOutlineESP(obj, Color3.fromRGB(0, 120, 255), Color3.fromRGB(0, 160, 255)) -- blue outline, light blue fill
    end
end
end

local function highlightMafiaso()
    for _, obj in workspace:GetDescendants() do
    if obj:IsA("Model") and obj.Name == "Mafiaso1" then
        createOutlineESP(obj, Color3.fromRGB(0, 120, 255), Color3.fromRGB(0, 160, 255)) -- blue outline, light blue fill
    end
end
end

local function highlightMafiaso2()
    for _, obj in workspace:GetDescendants() do
    if obj:IsA("Model") and obj.Name == "Mafiaso2" then
        createOutlineESP(obj, Color3.fromRGB(0, 120, 255), Color3.fromRGB(0, 160, 255)) -- blue outline, light blue fill
    end
end
end

local function highlightMafiaso3()
    for _, obj in workspace:GetDescendants() do
    if obj:IsA("Model") and obj.Name == "Mafiaso3" then
        createOutlineESP(obj, Color3.fromRGB(0, 120, 255), Color3.fromRGB(0, 160, 255)) -- blue outline, light blue fill
    end
end
end

local function highlightBuilderman()
    for _, obj in workspace:GetDescendants() do
    if obj:IsA("Model") and obj.Name == "Builderman" then
        createOutlineESP(obj, Color3.fromRGB(0, 120, 255), Color3.fromRGB(0, 160, 255)) -- blue outline, light blue fill
    end
end
end

local function highlightShed()
    for _, obj in workspace:GetDescendants() do
    if obj:IsA("Model") and obj.Name == "ShedletskyCORRUPT" then
        createOutlineESP(obj, Color3.fromRGB(0, 120, 255), Color3.fromRGB(0, 160, 255)) -- blue outline, light blue fill
    end
end
end

local function highlightElliot()
    for _, obj in workspace:GetDescendants() do
    if obj:IsA("Model") and obj.Name == "Elliot" then
        createOutlineESP(obj, Color3.fromRGB(0, 120, 255), Color3.fromRGB(0, 160, 255)) -- blue outline, light blue fill
    end
end
end

local function highlightChance()
    for _, obj in workspace:GetDescendants() do
    if obj:IsA("Model") and obj.Name == "ChancecORRUPT" then
        createOutlineESP(obj, Color3.fromRGB(0, 120, 255), Color3.fromRGB(0, 160, 255)) -- blue outline, light blue fill
    end
end
end

local function highlightsubspaced()
    for _, obj in workspace:GetDescendants() do
    if obj:IsA("Model") and obj.Name == "SubspaceTripmine" then
        createOutlineESP(obj, Color3.fromRGB(200, 0, 255), Color3.fromRGB(220, 0, 255)) -- blue outline, light blue fill
    end
end
end

local function highlightDispenser()
    for _, obj in workspace:GetDescendants() do
    if obj:IsA("Model") and obj.Name == "BuildermanDispenser" then
        createOutlineESP(obj, Color3.fromRGB(0, 120, 255), Color3.fromRGB(0, 160, 255)) -- blue outline, light blue fill
    end
end
end

local function highlightSentry()
    for _, obj in workspace:GetDescendants() do
    if obj:IsA("Model") and obj.Name == "BuildermanSentry" then
        createOutlineESP(obj, Color3.fromRGB(0, 120, 255), Color3.fromRGB(0, 160, 255)) -- blue outline, light blue fill
    end
end
end

local function updateESP()
    while true do
        local players = Players:GetPlayers() -- Store once to avoid multiple function calls

        for _, player in players do
            local character = player.Character
            if character then
                -- Clear existing highlights
                for _, obj in character:GetChildren() do
                    if obj:IsA("Highlight") then
                        obj:Destroy()
                    end
                end

                -- check if humanoid root part have property in robloxia
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    if humanoid.MaxHealth > 500 then
                        -- idk
                        createOutlineESP(character, Color3.fromRGB(255, 0, 0), Color3.fromRGB(200, 0, 0))
                        createHealthIndicator(character, Color3.fromRGB(255, 0, 0))
                    else
                        -- killars
                        createOutlineESP(character, Color3.new(0.5, 0.5, 0.5), Color3.new(0.7, 0.7, 0.7))
                        createHealthIndicator(character, Color3.new(1, 1, 1))
                    end
                end
            end
        end

        
        updateHealthIndicators()
        highlightMinions()
        highlightDelivery()
        highlightMafiaso()
        highlightMafiaso2()
        highlightMafiaso3()
        highlightBuilderman()
        highlightShed()
        highlightElliot()
        highlightChance()
        highlightsubspaced()
        highlightDispenser()
        highlightSentry()
        highlightGenerators()
        

        task.wait() -- More accurate and efficient timing
    end
end
game:GetService("StarterGui"):SetCore("SendNotification", {Title = "ESP"; Text = "Â "; Duration = 20})
task.spawn(updateESP())
